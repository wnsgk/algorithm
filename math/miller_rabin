/* 소수판별법
 * O(k*log^3n)
 */
 
long long power(long long x, long long y, long long p) {
    long long ret = 1;
    x = x % p;
    while(y > 0) {
        if(y & 1) ret = ret*x%p;
        y >>= 1;
        x = x*x%p;
    }
    return ret;
}

bool miller_rabin(long long x, long long a){
    if (x % a == 0) return 0;
	long long d = x - 1;
	while (1) {
		long long tmp = power(a, d, x);
		if (d & 1) return (tmp != 1 && tmp != x - 1);
		else if (tmp == x - 1) return 0;
		d >>= 1;
	}
}

bool is_prime(long long x) {
    int p[12] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37};
	for (auto& i : p) {
		if (x == i) return true;
		if (x > 40 && miller_rabin(x, i)) return false;
	}
	if (x <= 40) return false;
	return true;
}
