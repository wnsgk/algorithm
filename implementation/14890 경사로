#include <iostream>
#include <vector>

using namespace std;

int n, l;
vector<vector<int>> v(100, vector<int>(100, 0));
vector<int> visit(100, 0);
bool make_road(int x, int y){
    for(int i = 0; i < n; i++) visit[i] = 0;
    if(y == 0){
        int prev = v[0][x];
        int cnt = 1;
        for(int i = 1; i < n; i++){
            if(prev == v[i][x]) cnt++;
            else{
                if(prev > v[i][x]){
                    prev = v[i][x];
                    cnt = 1;
                }
                else if(cnt >= l && prev + 1 == v[i][x]){
                    for(int j = 1; j < l+1; j++) visit[i-j] = 1;
                    prev = v[i][x];
                    cnt = 1;
                }
                else return false;
            }
        }
        prev = v[n-1][x];
        cnt = 1;
        for(int i = n-2; i >= 0; i--){
            if(prev == v[i][x]) cnt++;
            else{
                if(prev > v[i][x]){
                    prev = v[i][x];
                    cnt = 1;
                }
                else if(cnt >= l && prev + 1 == v[i][x]){
                    for(int j = 1; j < l+1; j++){
                        if(visit[i+j] == 1) return false;
                        visit[i+j] = 1;
                    }
                    prev = v[i][x];
                    cnt = 1;
                }
                else return false;
            }
        }
    }
    else{
        int prev = v[x][0];
        int cnt = 1;
        for(int i = 1; i < n; i++){
            if(prev == v[x][i]) cnt++;
            else{
                if(prev > v[x][i]){
                    prev = v[x][i];
                    cnt = 1;
                }
                else if(cnt >= l && prev + 1 == v[x][i]){
                    for(int j = 1; j < l+1; j++) visit[i-j] = 1;
                    prev = v[x][i];
                    cnt = 1;
                }
                else return false;
            }
        }
        prev = v[x][n-1];
        cnt = 1;
        for(int i = n-2; i >= 0; i--){
            if(prev == v[x][i]) cnt++;
            else{
                if(prev > v[x][i]){
                    prev = v[x][i];
                    cnt = 1;
                }
                else if(cnt >= l && prev + 1 == v[x][i]){
                    for(int j = 1; j < l+1; j++){
                        if(visit[i+j] == 1) return false;
                        visit[i+j] = 1;
                    }
                    prev = v[x][i];
                    cnt = 1;
                }
                else return false;
            }
        }
    }
    return true;
}
