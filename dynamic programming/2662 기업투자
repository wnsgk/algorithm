/*
 * knapsack
 * G3
 */
#include<iostream>
#include<vector>

using namespace std;

int main(){

    int n, m, a;
    cin>>n>>m;
    vector<vector<int>> v(n+1, vector<int>(m+1));
    vector<vector<int>> dp(m+1, vector<int>(n+1));
    for(int i = 0; i < n; i++) {
        cin>>a;
        for(int j = 1; j <= m; j++) {
            cin>>v[a][j];
        }
    }
    for(int i = 1; i <= n; i++) dp[1][i] = v[i][1];
    for(int i = 2; i <= m; i++) {
        for(int j = 1; j <= n; j++) {
            for(int k = 0; k <=j; k++){
                dp[i][j] = max(dp[i][j], dp[i-1][j-k]+v[k][i]);
            }
        }
    }
    int ans = 0, idx = 0;
    vector<int> vv(m+1);
    for(int i = 1; i <= n; i++) {
        if(ans < dp[m][i]) {
            ans = dp[m][i];
            idx = i;
        }
    }
    for(int i = m; i > 0 ; i--) {
        for(int j = idx; j >= 0; j--) {
            if(dp[i][idx] - dp[i-1][j] == v[idx-j][i]) {
                vv[i] = idx-j;
                idx = j;
                break;
            }
        }
        if(idx == 0) break;
    }
    cout<<ans<<endl;
    for(int i = 1; i <= m; i++) cout<<vv[i]<<" ";
    return 0;
}
