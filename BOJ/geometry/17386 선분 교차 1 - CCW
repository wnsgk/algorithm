/* 벡터 외적을 이용한 선분 교차
 * G3
 */
#include <iostream>
#include <vector>

using namespace std;
typedef long long ll;
int n;

struct Point {
	ll x;
	ll y;
};

ll CCW(Point A, Point B, Point C) {
    ll result = (B.x - A.x) * (C.y - A.y) - (C.x - A.x) * (B.y - A.y);
 
    if (result > 0) {  //반시계
        return 1;
    }
    else if (result < 0) {  //시계
        return -1;
    }
    return 0;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    Point A,B,C,D;
    cin>>A.x>>A.y>>B.x>>B.y>>C.x>>C.y>>D.x>>D.y;
    ll x = CCW(A, B, C);
    ll y = CCW(A, B, D);
    ll z = CCW(C, D, A);
    ll w = CCW(C, D, B);
    if(x*y == 0 && z*w == 0) {
        ll a = max(A.x, B.x);
        ll b = min(A.x, B.x);
        ll c = max(C.x, D.x);
        ll d = min(C.x, D.x);
        if(a <= d && b <= c) cout<<"1\n";
        else cout<<"0\n";
    }
    else if ((x * y) <= 0 && (z * w) <= 0) {
        std::cout << "1\n";
    }
    else {
        std::cout << "0\n";
    }
    
    return 0;
}
