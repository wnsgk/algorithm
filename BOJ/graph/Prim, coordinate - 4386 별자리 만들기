/*
G4
*/

#include <iostream>
#include <cmath>
#include <vector>
#include <queue>

using namespace std;

vector<int> visit(100);

int main()
{
    ios_base::sync_with_stdio(0);
	cin.tie(NULL);
    int answer = 0;
    int n;
    double mn = 2000.0;
    cin>>n;
    vector<pair<double,double>> coord(n);
    vector<vector<pair<int,double>>> dist(n);
    for(int i = 0; i < n; i++)
    {
        cin>>coord[i].first>>coord[i].second;
    }
    for(int i = 0; i < n; i++)
    {
        for(int j = i+1; j < n; j++)
        {
            double d = sqrt(pow(coord[i].first - coord[j].first, 2) + pow(coord[i].second - coord[j].second, 2));
            //mn = min(mn, d);
            dist[i].push_back(make_pair(j, d));
            dist[j].push_back(make_pair(i, d));
        }
    }
    priority_queue<pair<double,int>> q;
    visit[0] = 1;
    for(int i = 0; i < dist[0].size(); i++)
    {
        q.push(make_pair(-dist[0][i].second, dist[0][i].first));
    }
    int a = 1;
    double ans = 0.0;
    while(a<n)
    {
        double d = -q.top().first;
        int next = q.top().second;
        q.pop();
        if(visit[next] == 1) continue;
        visit[next] = 1;
        ans += d;
        for(int i = 0; i < dist[next].size(); i++)
        {
            int y = dist[next][i].first;
            d = dist[next][i].second;
            if(visit[y] == 0)
                q.push(make_pair(-d, y));
        }
        a++;
    }
    cout.precision(10);
    cout<<ans;
    return 0;
}
