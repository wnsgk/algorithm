//O(VEf)
#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

int MAX_N = 400;
int MAX_V = 2*(MAX_N+1);
int s = MAX_V-2, e = MAX_V-1, INF = 1000000000;


int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    int c[MAX_V][MAX_V] = {0}, d[MAX_V][MAX_V] = {0}, f[MAX_V][MAX_V] = {0};
    vector<int> adj[MAX_V];
    
    int n, m, a, w, mn;
    cin>>n>>m;
    for(int i=1; i<=n; i++){
        cin>>a;
        for(int j = 0; j < a; j++) {
            cin>>w>>mn;
            w += MAX_N;
            adj[i].push_back(w);
            adj[w].push_back(i);
            c[i][w] = INF;
            d[i][w] = mn;
            d[w][i] = -mn;
        }
        adj[s].push_back(i);
        adj[i].push_back(s);
        c[s][i] = 1;
    }
    for(int i=1+MAX_N; i <= MAX_N+m; i++) {
        adj[e].push_back(i);
        adj[i].push_back(e);
        c[i][e] = 1;
    }
 
    int result = 0;
    
    while(1){
        int prev[MAX_V], dist[MAX_V];
        bool inQ[MAX_V] = {0};
        queue<int> q;
        fill(prev, prev+MAX_V, -1);
        fill(dist, dist+MAX_V, INF);
        dist[s] = 0;
        inQ[s] = true;
        q.push(s);
 
        while(!q.empty()){
            int curr = q.front();
            q.pop();
            inQ[curr] = false;
            for(int next: adj[curr]){
                if(c[curr][next]-f[curr][next] > 0 && dist[next] > dist[curr]+d[curr][next]){
                    dist[next] = dist[curr] + d[curr][next];
                    prev[next] = curr;
                    if(!inQ[next]){
                        q.push(next);
                        inQ[next] = true;
                    }
                }
            }
        }
        if(prev[e] == -1) break;
 
        int flow = INF;
        for(int i=e; i!=s; i=prev[i])
            flow = min(flow, c[prev[i]][i] - f[prev[i]][i]);
 
        for(int i=e; i!=s; i=prev[i]){
            result += flow * d[prev[i]][i];
            f[prev[i]][i] += flow;
            f[i][prev[i]] -= flow;
        }
    }
    int ans = 0;
    for(int i=1+MAX_N; i <= MAX_N+m; i++) {
        if(f[i][e] == 1) ans++;
    }
    cout<<ans<<endl;
    cout<<result;
}
